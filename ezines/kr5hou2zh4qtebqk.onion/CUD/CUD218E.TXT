

  ****************************************************************************
                  >C O M P U T E R   U N D E R G R O U N D<
                                >D I G E S T<
              ***  Volume 2, Issue #2.18 (December 28, 1990)   **
  ****************************************************************************

MODERATORS:   Jim Thomas / Gordon Meyer  (TK0JUT2@NIU.bitnet)
ARCHIVISTS:   Bob Krause / Alex Smith
PERIPATETIC GADFLY:  Brendan Kehoe

USENET readers can currently receive CuD as alt.society.cu-digest.

COMPUTER UNDERGROUND DIGEST is an open forum dedicated to sharing
information among computerists and to the presentation and debate of
diverse views.  CuD material may be reprinted as long as the source is
cited.  Some authors, however, do copyright their material, and those
authors should be contacted for reprint permission.
It is assumed that non-personal mail to the moderators may be reprinted
unless otherwise specified. Readers are encouraged to submit reasoned
articles relating to the Computer Underground.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
DISCLAIMER: The views represented herein do not necessarily represent the
            views of the moderators. Contributors assume all responsibility
            for assuring that articles submitted do not violate copyright
            protections.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

------------------------------

From: Dark Adept (Ripco-312-528-5020)
Subject: Trade Secrets; When are they Bad?
Date: Sat, 1 Dec 90 1:38:06 CST

********************************************************************
***  CuD #2.18: File 5 of 5: Trade Secrets: When are they Bad?   ***
********************************************************************

                    Trade Secrets:  When are they bad?

                                    by

                              The Dark Adept


A trade secret is a method or procedure or information used by a company to
obtain profit.  The law protects trade secrets through copyrighting and
patenting and various other laws.  The main reason a company protects this
type of information is to stop competitors from producing the same product
thereby taking away from its profits.  The main reason the government
protects the rights of the company to protect this information is to
promote innovation and progress (at least according to the U.S.
Constitution).  But, there are times when copyrighting and patenting reduce
profits and restrict progress and innovation.


The User Interface
==================

One of the most important aspects of a computer program is the user
interface (the way in which the user is allowed to interact with the
computer).  Ideally, a program should be able to perform complex tasks and
remain user-friendly.  However, the user interface does not affect the way
in which the program completes its task.  Two different programs with the
same user interface can perform the same task in two different ways.  One
might be better or faster at the task than the other.  Conversely, two
programs that perform different tasks may have the same user interface.
The point is that the user interface is generic.  It can be applied to many
different programs without changing the value of the program.  It merely
enhances or detracts from the program.

In the same way, the user interface of any product does not change the
integral operation of the product.  Take the automobile, for example.
In all automobiles the user interface is the same.  There is a wheel you
turn for direction.  There are pedals on the floor to control speed, etc.
The quality of the automobiles are not judged for value by the user
interface, but by how the automobile responds to input from the user.
How fast it goes, how durable it is, etc., these are the qualities by how
an automobile is selected for purchase, and not by the fact that it has
a steering wheel.  One may take this analogy further by comparing automatic
transmissions against stick-shifts.  Neither changes the performance of the
car in a radical way.  A purchaser selects automatic or manual as a matter
of either aesthetic preference or familiarity.  If the buyer prefers stick
over automatic, but the car with the stick is way behind the automatic
in terms of performance, he would generally choose the automatic since he
is buying the car to perform a task.  The way the car performs the task
is more important than how he tells the car to perform the task as long as
both are equally intelligible to the car.

Can you see the point I am trying to make?  A program can work either through
a command line interface, a key-stroke interface, or a GUI (Graphic User
Interface).  None of these change the performance of the program to any
great extent.  They merely change the aesthetics and the ease of use.  The
interface should not be allowed to be protected under law.  To do so would
interfere with innovation and progress without conclusively affecting the
profits of a company.  If company A holds the rights to the best interface,
but their program is worthless, then company B will still make more profit.
If it is truly the best interface possible, then progress would be slowed
since people would have to learn many different types of interfaces to go
from one program to another.  Clearly, it would be in the interest of all
concerned to leave the interface open for public usage and only protect
the code behind the interface.

Algorithms
==========

To protect an algorithm is to, in effect, copyright a mathematical equation.
Since all algorithms reduce down to a mathematical model, that model would
not be able to be implemented except by whoever holds the rights. This
would greatly reduce the productivity of mathematicians.  Imagine if
someone patented Integral Calculus.  Don't laugh.  IC is an algorithm
like any other.  It is a solution to a problem.   Or what if someone
patented the internal combustion engine?  Most of us would be walking.
But like the engine, it is not the algorithm of the engine that is important,
but how it is implemented.  All engines work on the same basic principle, but
they do so differently.  This is why one engine works better than the other.
This is why a buyer would choose one engine over another.


Source Code
===========

While source code should generally be protected, there are times when it
may be more profitable to a company to release either the source code or
important information pertaining to it.  A prime example is IBM and Apple.
Apple chose to keep their operating system under close wraps.  IBM, in their
usual wisdom, chose to let some of it fly.  This caused the market to be
flooded with "clone" PC's.  Given a choice, most people bought PC's or
PC-compatibles.  This generated more third-party support and even higher
sales.  What is the best selling computer today?  You got it.  Who
practically sets the standard for every computer that comes out today?  Good
guess.  While some may say that IBM could have made more money if they
had not released the information, I grant you that.  But, IBM has something
that Apple does not: insured existance.  There is no way that IBM could
be jettisoned from the marketplace.  IBM has insured that they will exist
long after Apple closes its doors.  All they have to do is keep putting
out downward compatible products and people will continue to buy PC's.


The Hacker Ethic Vs. The Business Ethic
=======================================

Hackers (including programmers) view computer programs different than
businessmen do.  Bits and pieces of programs are meant to be shared in order
to further innovation and increase productivity.  Programmers have always
shared algorithms, traded libraries, and swapped subroutines.  They do this
so that they do not have to "reinvent the wheel" every time they write a
program.  If something is very basic and can be used over and over in
many programs, then programmers share it with others.

Businessmen, on the other hand, are not motivated by sharing but by making
a dollar.  There is nothing wrong with this at all.  The problem is that
sometimes making a dollar in the short run can be detrimental to the overall
market in the long run.  Being misers with algorithms will force everyone
to spend a lot of time and MONEY to develop new products.  If something
is so basic and so useful, then it should be allowed the freedom to be
developed to its fullest.  Only then will the real bucks come rolling in.

The solution to this paradox is that hackers have to learn that companies
need money to keep going, and businessmen have to learn that computers
cannot be treated like most products.  A compromise needs to be reached so
that both profits and innovation are protected without destroying each.  Not
everything should be given away, and not everything should be kept secret.
Both should collaborate on deciding what to release and what to keep.
Lately, it has been more of a business decision than a programmer's, and
the imbalance is not good.


Conclusion
==========

There are more things to consider when protecting something in a computer
program than next quarter's profits.  In the long run, it may be more
profitable to let the competition use some of your ideas.  The more people
who are able to easily access computers, the bigger the market, and the
more profit.  If only one company has a good interface and the price is
high, the market will be small.  Obviously, not everything should be
allowed to be used freely, but the decision-making process should include
more than looking at the bottom line.


A fond farewell.....
====================

This is the last in my series of articles for CuD.  I have tried to show
another side of the Underground than the one that is commonplace.  There
is much more to the Underground than hacking and phreaking.  It is composed
of many intelligent people who can make a valuable contribution to the
computer industry.  They should not be thrown to the wayside as they have
been.  While I am not a spokesman for anyone down here, and I am certainly
long-winded and less intelligent than many, I sincerely hope that these
articles have made an impact on someone somewhere.

I would also hope that I have inspired other members of the Underground
to show that they are more than people who break into systems.  This
is your chance: start showing people what you really are, and then they
will take you seriously.  You can do a better job than I did; I know you
can!  Go out there and do it!!!

I would especially like to thank CuD and Jim Thomas for allowing me to
espouse my drivel in their fine digest.  A finer and fairer publication
could not be found anywhere.  I would also like to thank Dr. Ripco since
it was his BBS that first connected me to Underground when I was a mere
pup of 15, 6 years ago.  I have yet to see a BBS that compares in quality
in all my years down here.

As for my future plans, I will be taking a sabbatical from being active in
the Underground for a while.  I have many things to reflect over and much
to plan for my life.  I have a few projects that may or may not include
programming, writing, and editing a tech journal that will contain
articles from members of the Underground of a technical nature.  This
journal would be sent throughout the computer industry as a means of
communication.

I know these articles probably sucked, but I gave it my best shot.


In the words of the Darkest Adept the world has ever known:

Do what thou Wilt shall be the whole of the Law;
Love is the Law, Love under Will.


Thanks for the memories....

As always, I remain...

The Dark Adept
Email:  Ripco BBS (312)-528-5020


********************************************************************

------------------------------

                           **END OF CuD #2.18**


Downloaded From P-80 International Information Systems 304-744-2253 12yrs+
